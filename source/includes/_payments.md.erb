## Payments

Payments in Quaderno-lingo represent the recording of a successful payment.

Like [products](#items), payments are a sub-object and can be attached to invoices and expenses.

<aside class="notice">
Note that unlike products, payments cannot exist in Quaderno separately to an instance of one of these classes, and the same payment cannot be referenced by more than one instance.
</aside>

### Create a payment

> `POST /invoices/INVOICE_ID/payments.json` or `POST /expenses/EXPENSE_ID/payments.json`

```shell
# body.json
{
  "amount":"56.60",
  "payment_method":"credit_card",
  "payment_processor":"stripe",
  "payment_processor_id":"ch_19yUdh2eZvKYlo2CkFVBOZG7"
}

# curl command
curl -u YOUR_API_KEY:x \
     -H 'Content-Type: application/json' \
     -X POST \
     --data-binary @body.json \
     'https://ACCOUNT_NAME.quadernoapp.com/api/invoices/INVOICE_ID/payments.json'
```

```php
$payment = new QuadernoPayment(array(
                                'date' => date('2012-10-10'),
                                'payment_method' => 'credit_card',
                                'amount' => '56.60',
                                'payment_processor' => 'stripe',
                                'payment_processor_id' => 'ch_19yUdh2eZvKYlo2CkFVBOZG7'));

$invoice->addPayment($payment);               // Return true (success) or false (error)
$invoice->save();                             // Returns true (success) or false (error)
```

```ruby
invoice = Quaderno::Invoice.find(invoice_id)
params = {
    payment_method: 'credit_card',
    amount: '56.60',
    payment_processor: 'stripe',
    payment_processor_id: 'ch_19yUdh2eZvKYlo2CkFVBOZG7'
}
invoice.add_payment(params) #=> Quaderno::Payment
```

`POST`ing to `invoices/INVOICE_ID/payments.json` or `expenses/EXPENSE_ID/payments.json` will create a new payment from the parameters passed. Note that payments can only be created as an attachment to an invoice or expense.

This will return `201 Created` and the current JSON representation of the payment if the creation was a success, along with the location of the new item in the `Location` header.

Attributes:

Attribute      | Mandatory | Type/Description
---------------|-----------|-------------------------------------------------------------------------------------------------------------------------------------
amount         | **yes**   | Decimal
date           | no        | String(255 chars) Format `YYYY-MM-DD`
payment_method | **yes**   | One of the following: `credit_card`, `cash`, `wire_transfer`, `direct_debit`, `check`, `iou`, `paypal` or `other`
payment_processor  | no    | Payment processor that you used to process the payment.
payment_processor_id  | no | The `id` that the payment processor assigned to the payment.

### Retrieve a payment

```shell
curl -u YOUR_API_KEY:x \
     -X GET 'https://ACCOUNT_NAME.quadernoapp.com/api/expenses/EXPENSE_ID/payments/PAYMENT_ID.json'
```

```php
$expense = QuadernoExpense::find('EXPENSE_ID'); // Returns a QuadernoExpense
$payments = $expense->getPayments(); // Returns an array of QuadernoPayment to iterate through
```

```ruby
expense = Quaderno::Expense.find(EXPENSE_ID) #=> Quaderno::Expense
payments = expense.payments #=> an array of Quaderno::Payment to iterate through
```

`GET`ting from `/invoices/INVOICE_ID/payments/PAYMENT_ID.json` or `/expenses/EXPENSE_ID/payments/PAYMENT_ID.json` will return that payments on the invoice or expense in question, if it exists.

### Delete a payment

> `DELETE /invoices/INVOICE_ID/payments/PAYMENT_ID.json` or `DELETE /expenses/EXPENSE_ID/payments/PAYMENT_ID.json`

```shell
curl -u YOUR_API_KEY:x \
     -X DELETE 'https://ACCOUNT_NAME.quadernoapp.com/api/expenses/EXPENSE_ID/payments/PAYMENT_ID.json'
```

```ruby
invoice = Quaderno::Invoice.find(invoice_id)
invoice.remove_payment(payment_id) #=> Boolean
```

```php
$expense->removePayment($payments[2]); // Return true (success) or false (error)
```

`DELETE`ing to `/invoices/INVOICE_ID/payments/PAYMENT_ID.json` or `/expenses/EXPENSE_ID/payments/PAYMENT_ID.json` will delete the specified payment and returns `204 No Content` if successful.

### List all payments

> `GET /invoices/INVOICE_ID/payments.json`

```shell
curl -u YOUR_API_KEY:x \
     -X GET 'https://ACCOUNT_NAME.quadernoapp.com/api/invoices/INVOICE_ID/payments.json'
```

```ruby
invoice = Quaderno::Invoice.find(INVOICE_ID) #=> Quaderno::Invoice
payments = invoice.payments #=> an array of Quaderno::Payment
```

```php
$invoice = QuadernoInvoice::find('INVOICE_ID'); // Returns a QuadernoInvoice
$payments = $invoice->getPayments(); // Returns an array of QuadernoPayment
```

`GET`ting from `/invoices/INVOICE_ID/payments.json` or `/expenses/EXPENSE_ID/payments.json` will return all the payments on the invoice or expense in question.
