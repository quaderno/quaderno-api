## Taxes (legacy)

<aside class="notice">
The following endpoints are legacy and will be discontinued on 1st May 2021.
Use the following endpoints instead:
<ul>
    <li><strong>/tax_rates/calculate</strong> to <a href="#calculate-a-tax-rate">calculate tax rates</a></li>
    <li><strong>/tax_ids/validate</strong> to <a href="#validate-a-tax-id">validate tax IDs]</a></li>
</ul>
</aside>

One of the killer features Quaderno provides is efficient and easy tax management. As part of this, we offer an API for easy tax calculation.

### Calculate Taxes

> `GET /taxes/calculate.json`

```cURL

curl -u YOUR_API_KEY:x \
     -H 'Content-Type: application/json' \
     -X GET \
     'https://ACCOUNT_NAME.quadernoapp.com/api/taxes/calculate.json?country=US&postal_code=94010'
```

```ruby
params = {
    country: 'US',
    postal_code: '94010'
}
tax = Quaderno::Tax.calculate(params) #=> Quaderno::Tax
```

```php
$data = array(
  'country' => 'US',
  'postal_code' => '94010'
);

$tax = QuadernoTax::calculate($data); // Returns a QuadernoTax
$tax->name; // "Sales Tax"
$tax->rate; // 9.5
```

```json
{
    "name": "Sales tax",
    "rate": 9.5,
    "extra_name":null,
    "extra_rate":null,
    "country":"US",
    "region":"CA",
    "transaction_type":"eservice",
    "notes":null
}
```

`GET`ting to `/taxes/calculate.json` will calculate the applicable taxes given a customer's data.

Parameter          | Mandatory | Description
-------------------|-----------|------------------------------------------------------------------------------------------------
`country`          | **Yes**   | Customer's country (2-letter [ISO code](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes))
`postal_code`      | No        | Customer's postal code / zip
`city`             | No        | Customer's city (for US sales tax)
`tax_id`           | No        | Customer's Tax ID. Quaderno can validate tax IDs from the EU, United Kingdom, Switzerland, Québec (Canada), Australia, and New Zealand.
`transaction_type` | No        | Values: `eservice`, `ebook`, `standard`, `reduced`, `saas`. Defaults to the "default tax type" configured in your account taxes settings.

This will return a `200 OK` if the request was a success, along with the taxes represented as a JSON string.

### Validating Tax IDs

> GET /taxes/validate.json

```cURL
curl -u YOUR_API_KEY:x \
     -H 'Content-Type: application/json' \
     -X GET \
     'https://ACCOUNT_NAME.quadernoapp.com/api/taxes/validate.json?country=IE&tax_id=IE6388047V'

{
    "valid":true
}
```

```ruby
country = 'IE'
tax_id = 'IE6388047V'

Quaderno::Tax.validate_vat_number(country, tax_id) #=> true, false or nil
```

```php

$country = 'IE';
$tax_id = 'IE6388047V';

QuadernoTax::validate_vat_number($country, $tax_id) // true, false or null
```

`GET`ting to `/taxes/validate.json` will validate the given tax ID. Currently Quaderno can validate tax IDs from the EU, United Kingdom, Switzerland, Québec (Canada), Australia, and New Zealand.

Please keep in mind that tax IDs are not actually validated while using the Sandbox.

Parameter    | Mandatory | Description
-------------|-----------|------------------------------------------------------------------------------------------------
`country`    | **Yes**   | Customer's country (2-letter [ISO code](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes))
`tax_id`     | **Yes**   | Customer's tax ID. Quaderno can validate tax IDs from the EU, United Kingdom, Switzerland, Québec (Canada), Australia, and New Zealand.

This will return a `200 OK` and the result of validating the tax ID against the official external validation service. The result can be true (valid business number), false (invalid business number) or null (the external service is temporarily unavailable).

In our [Sandbox](https://developers.quaderno.io/#introduction-the-sandbox), you can use the following test numbers: 

- **DE111111111**: invalid number, returns `false`
- **IE222222222**: node down, returns `null` 
